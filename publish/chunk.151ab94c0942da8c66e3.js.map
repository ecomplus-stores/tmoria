{"version":3,"sources":["webpack:///./node_modules/@ecomplus/widget-gmc-ratings/src/index.js"],"names":["options","gmcMerchantId","dialogPosition","router","window","storefrontApp","addConfirmationDialog","name","params","json","addDays","days","date","Date","now","setDate","getDate","order","customerEmail","deliveryCountry","deliveryDate","orderJson","decodeURIComponent","JSON","parse","e","buyers","main_email","shippingLine","shipping_lines","delivery_time","posting_deadline","working_days","ecomPassport","getCustomer","$ecomConfig","get","promises","gtins","optInConfig","merchant_id","order_id","number","id","email","delivery_country","estimated_delivery_date","getFullYear","getMonth","toString","padStart","opt_in_style","items","i","length","push","store","url","product_id","then","data","gtin","forEach","gtinCode","includes","catch","console","error","Promise","allSettled","products","map","gapi","load","surveyoptin","render","currentRoute","afterEach","Error"],"mappings":"2FAAA,kCAIe,WAACA,EAAU,MACxB,MAAM,cAAEC,EAAF,eAAiBC,GAAmBF,EAC1C,GAAIC,EAAe,CACjB,MAAME,EAASC,OAAOC,eAAiBD,OAAOC,cAAcF,OAC5D,GAAIA,EAAQ,CACV,MAAMG,EAAwB,EAAGC,OAAMC,aACrC,GAAa,iBAATD,GAA2BC,EAAOC,KAAM,CAC1C,MAAMC,EAAUC,IACd,MAAMC,EAAO,IAAIC,KAAKA,KAAKC,OAE3B,OADAF,EAAKG,QAAQH,EAAKI,UAAYL,GACvBC,GAGT,IAAIK,EAAOC,EAAeC,EAAiBC,EAC3C,MAAMC,EAAYC,mBAAmBd,EAAOC,MAC5C,GAAIY,EACF,IACEJ,EAAQM,KAAKC,MAAMH,GACnB,MAAOI,IAIX,GAAIR,EAAO,CACT,MAAM,OAAES,GAAWT,EACfS,GAAUA,EAAO,KACnBR,EAAgBQ,EAAO,GAAGC,YAE5B,MAAMC,EAAeX,EAAMY,gBAAkBZ,EAAMY,eAAe,GAClE,GAAID,GAAgBA,EAAaE,cAAe,CAC9C,IAAInB,EAAOiB,EAAaE,cAAcnB,KAClCiB,EAAaG,mBACfpB,GAAQiB,EAAaE,cAAcnB,MAEjCiB,EAAaE,cAAcE,eAC7BrB,GAAQ,MAEVS,EAAeV,EAAQC,EAAO,IAI7BO,IACHA,EAAgBe,IAAaC,cAAcP,YAExCR,IACHA,EAAkBgB,cAAYC,IAAI,iBAE/BhB,IACHA,EAAeV,EAAQ,KAGzB,MAAM2B,EAAW,GACXC,EAAQ,GACRC,EAAc,CAClBC,YAAavC,EACbwC,SAAUjC,EAAOkC,QAAUlC,EAAOmC,GAClCC,MAAO1B,EACP2B,iBAAkB1B,EAClB2B,wBAAyB1B,EAAa2B,cACnC,KAAI3B,EAAa4B,WAAa,GAAGC,WAAWC,SAAS,EAAG,QACzD9B,EAAaJ,UAAUiC,WAAWC,SAAS,EAAG,KAChDC,aAAcjD,GAAkB,iBAGlC,GAAIe,GAASA,EAAMmC,MACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIpC,EAAMmC,MAAME,QAAUD,GAAK,EAAGA,IAChDhB,EAASkB,KACPC,YAAM,CAAEC,IAAM,aAAYxC,EAAMmC,MAAMC,GAAGK,oBACtCC,MAAK,EAAGC,WACHA,EAAKC,MACPD,EAAKC,KAAKC,SAAQC,IACXzB,EAAM0B,SAASD,IAClBzB,EAAMiB,KAAKQ,SAKlBE,MAAMC,QAAQC,QAKvBC,QAAQC,WAAWhC,GAAUsB,MAAK,KAC5BrB,EAAMgB,SACRf,EAAY+B,SAAWhC,EAAMiC,KAAIV,IAAQ,CAAGA,YAE9CzD,OAAOoE,KAAKC,KAAK,eAAe,WAC9BrE,OAAOoE,KAAKE,YAAYC,OAAOpC,WAMnCpC,EAAOyE,cACTtE,EAAsBH,EAAOyE,cAE/BzE,EAAO0E,UAAUvE,SAGnB4D,QAAQC,MAAM,IAAIW,MAAM","file":"chunk.151ab94c0942da8c66e3.js","sourcesContent":["import { $ecomConfig } from '@ecomplus/utils'\nimport { store } from '@ecomplus/client'\nimport ecomPassport from '@ecomplus/passport-client'\n\nexport default (options = {}) => {\n  const { gmcMerchantId, dialogPosition } = options\n  if (gmcMerchantId) {\n    const router = window.storefrontApp && window.storefrontApp.router\n    if (router) {\n      const addConfirmationDialog = ({ name, params }) => {\n        if (name === 'confirmation' && params.json) {\n          const addDays = days => {\n            const date = new Date(Date.now())\n            date.setDate(date.getDate() + days)\n            return date\n          }\n\n          let order, customerEmail, deliveryCountry, deliveryDate\n          const orderJson = decodeURIComponent(params.json)\n          if (orderJson) {\n            try {\n              order = JSON.parse(orderJson)\n            } catch (e) {\n            }\n          }\n\n          if (order) {\n            const { buyers } = order\n            if (buyers && buyers[0]) {\n              customerEmail = buyers[0].main_email\n            }\n            const shippingLine = order.shipping_lines && order.shipping_lines[0]\n            if (shippingLine && shippingLine.delivery_time) {\n              let days = shippingLine.delivery_time.days\n              if (shippingLine.posting_deadline) {\n                days += shippingLine.delivery_time.days\n              }\n              if (shippingLine.delivery_time.working_days) {\n                days *= 1.25\n              }\n              deliveryDate = addDays(days + 3)\n            }\n          }\n\n          if (!customerEmail) {\n            customerEmail = ecomPassport.getCustomer().main_email\n          }\n          if (!deliveryCountry) {\n            deliveryCountry = $ecomConfig.get('country_code')\n          }\n          if (!deliveryDate) {\n            deliveryDate = addDays(14)\n          }\n\n          const promises = []\n          const gtins = []\n          const optInConfig = {\n            merchant_id: gmcMerchantId,\n            order_id: params.number || params.id,\n            email: customerEmail,\n            delivery_country: deliveryCountry,\n            estimated_delivery_date: deliveryDate.getFullYear() +\n              `-${(deliveryDate.getMonth() + 1).toString().padStart(2, '0')}-` +\n              deliveryDate.getDate().toString().padStart(2, '0'),\n            opt_in_style: dialogPosition || 'CENTER_DIALOG'\n          }\n\n          if (order && order.items) {\n            for (let i = 0; i < order.items.length && i <= 4; i++) {\n              promises.push(\n                store({ url: `/products/${order.items[i].product_id}.json` })\n                  .then(({ data }) => {\n                    if (data.gtin) {\n                      data.gtin.forEach(gtinCode => {\n                        if (!gtins.includes(gtinCode)) {\n                          gtins.push(gtinCode)\n                        }\n                      })\n                    }\n                  })\n                  .catch(console.error)\n              )\n            }\n          }\n\n          Promise.allSettled(promises).then(() => {\n            if (gtins.length) {\n              optInConfig.products = gtins.map(gtin => ({ gtin }))\n            }\n            window.gapi.load('surveyoptin', function () {\n              window.gapi.surveyoptin.render(optInConfig)\n            })\n          })\n        }\n      }\n\n      if (router.currentRoute) {\n        addConfirmationDialog(router.currentRoute)\n      }\n      router.afterEach(addConfirmationDialog)\n    }\n  } else {\n    console.error(new Error('Can\\'t show opt-in dialog without `gmcMerchantId` option'))\n  }\n}\n"],"sourceRoot":""}