{"version":3,"sources":["webpack:///./node_modules/@ecomplus/widget-product/src/index.js"],"names":["options","elId","$productBlock","document","getElementById","$dock","isSSR","Boolean","storefront","window","getScopedSlots","body","context","vueOptions","render","h","TheProduct","attrs","id","props","product","available","checkInStock","buyText","scopedSlots","Object","assign","buy","domProps","innerHTML","undefined","removeSpinner","$loading","remove","dataset","toRender","mounted","on","Vue","$mount"],"mappings":";2FAAA,6CAUe,WAACA,EAAU,GAAIC,EAAO,aACnC,MAAMC,EAAgBC,SAASC,eAAeH,GAC9C,GAAIC,EAAe,CACjB,MAAMG,EAAQF,SAASC,eAAgB,GAAEH,UACnCK,EAAQC,QAAQF,IAChB,WAAEG,GAAeC,OACvB,IAAIC,EAAgBC,EAChBH,IACFE,EAAiBF,EAAWE,eAC5BC,EAAOH,EAAWI,SAAWJ,EAAWI,QAAQD,MAGlD,MAAME,EAAa,CACjBC,OAAQC,GAAKA,EAAEC,IAAY,CACzBC,MAAO,CACLC,GAAIb,EAAQ,KAAOJ,GAErBkB,MAAO,IACFnB,EAAQmB,MACXC,QAASd,GAASK,GAAQA,EAAKU,WAAaC,YAAaX,GAAQA,EAAO,KACxEY,QAASvB,EAAQuB,QACjBjB,SAGFkB,YAAaC,OAAOC,OAClB,CACEC,IAAM3B,EAAQ2B,IAEV,WACA,OAAOZ,EAAE,OAAQ,CACfa,SAAU,CACRC,UAAW7B,EAAQ2B,aAJvBG,GASoB,mBAAnBpB,EACHA,EAAeR,EAAea,GAAIV,GAClC,OAKJ0B,EAAgB,KACpB,MAAMC,EAAW7B,SAASC,eAAe,mBACrC4B,GACFA,EAASC,gBAEJ/B,EAAcgC,QAAQC,UAE3B7B,EACFO,EAAWuB,QAAUL,EAErBlB,EAAWC,OAAOuB,GAAK,CACrB,iBAAkBN,GAItB,IAAIO,IAAIzB,GAAY0B,OAAOlC,GAASH","file":"chunk.76fb6200cf7b693741a2.js","sourcesContent":["/*!\n * @ecomplus/widget-product\n * (c) E-Com Club <ti@e-com.club>\n * Released under the MIT License.\n */\n\nimport Vue from 'vue'\nimport { inStock as checkInStock } from '@ecomplus/utils'\nimport TheProduct from '#components/TheProduct.vue'\n\nexport default (options = {}, elId = 'product') => {\n  const $productBlock = document.getElementById(elId)\n  if ($productBlock) {\n    const $dock = document.getElementById(`${elId}-dock`)\n    const isSSR = Boolean($dock)\n    const { storefront } = window\n    let getScopedSlots, body\n    if (storefront) {\n      getScopedSlots = storefront.getScopedSlots\n      body = storefront.context && storefront.context.body\n    }\n\n    const vueOptions = {\n      render: h => h(TheProduct, {\n        attrs: {\n          id: $dock ? null : elId\n        },\n        props: {\n          ...options.props,\n          product: isSSR && body && body.available && checkInStock(body) ? body : null,\n          buyText: options.buyText,\n          isSSR\n        },\n\n        scopedSlots: Object.assign(\n          {\n            buy: !options.buy\n              ? undefined\n              : function () {\n                return h('span', {\n                  domProps: {\n                    innerHTML: options.buy\n                  }\n                })\n              }\n          },\n          typeof getScopedSlots === 'function'\n            ? getScopedSlots($productBlock, h, !$dock)\n            : {}\n        )\n      })\n    }\n\n    const removeSpinner = () => {\n      const $loading = document.getElementById('product-loading')\n      if ($loading) {\n        $loading.remove()\n      }\n      delete $productBlock.dataset.toRender\n    }\n    if (isSSR) {\n      vueOptions.mounted = removeSpinner\n    } else {\n      vueOptions.render.on = {\n        'update:product': removeSpinner\n      }\n    }\n\n    new Vue(vueOptions).$mount($dock || $productBlock)\n  }\n}\n"],"sourceRoot":""}